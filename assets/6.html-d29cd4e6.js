const e=JSON.parse('{"key":"v-3987662e","path":"/js/%E9%AB%98%E7%BA%A7/6.html","title":"JavaScript的垃圾回收和内存泄漏","lang":"zh-CN","frontmatter":{"date":"2022-04-09T00:00:00.000Z","category":["js高级"],"tag":["内存泄露","垃圾回收"],"description":"JavaScript的垃圾回收和内存泄漏 JavaScript的垃圾回收机制 什么是GC GC 即 Garbage Collection ，程序工作过程中会产生很多垃圾，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 GC 就是负责回收垃圾的，因为他工作在引擎内部，所以对于我们前端来说，GC 过程是相对比较无感的，这一套引擎执行而对我们又相对无感的操作也就是常说的 垃圾回收机制 。 当然也不是所有语言都有 GC，一般的高级语言里面会自带 GC，比如 Java、Python、JavaScript 等，也有无 GC 的语言，比如 C、C++ 等，那这种就需要我们程序员手动管理内存了，相对比较麻烦。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/js/%E9%AB%98%E7%BA%A7/6.html"}],["meta",{"property":"og:title","content":"JavaScript的垃圾回收和内存泄漏"}],["meta",{"property":"og:description","content":"JavaScript的垃圾回收和内存泄漏 JavaScript的垃圾回收机制 什么是GC GC 即 Garbage Collection ，程序工作过程中会产生很多垃圾，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 GC 就是负责回收垃圾的，因为他工作在引擎内部，所以对于我们前端来说，GC 过程是相对比较无感的，这一套引擎执行而对我们又相对无感的操作也就是常说的 垃圾回收机制 。 当然也不是所有语言都有 GC，一般的高级语言里面会自带 GC，比如 Java、Python、JavaScript 等，也有无 GC 的语言，比如 C、C++ 等，那这种就需要我们程序员手动管理内存了，相对比较麻烦。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-09T10:07:13.000Z"}],["meta",{"property":"article:author","content":"xiaokai"}],["meta",{"property":"article:tag","content":"内存泄露"}],["meta",{"property":"article:tag","content":"垃圾回收"}],["meta",{"property":"article:published_time","content":"2022-04-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-09T10:07:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript的垃圾回收和内存泄漏\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-09T10:07:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaokai\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"JavaScript的垃圾回收机制","slug":"javascript的垃圾回收机制","link":"#javascript的垃圾回收机制","children":[{"level":3,"title":"什么是GC","slug":"什么是gc","link":"#什么是gc","children":[]},{"level":3,"title":"垃圾产生&为何回收","slug":"垃圾产生-为何回收","link":"#垃圾产生-为何回收","children":[]},{"level":3,"title":"垃圾回收策略","slug":"垃圾回收策略","link":"#垃圾回收策略","children":[]},{"level":3,"title":"V8对GC的优化","slug":"v8对gc的优化","link":"#v8对gc的优化","children":[]}]},{"level":2,"title":"JavaScript的内存泄漏","slug":"javascript的内存泄漏","link":"#javascript的内存泄漏","children":[]},{"level":2,"title":"什么是内存泄漏","slug":"什么是内存泄漏","link":"#什么是内存泄漏","children":[]},{"level":2,"title":"常见的内存泄露","slug":"常见的内存泄露","link":"#常见的内存泄露","children":[{"level":3,"title":"不正当的闭包","slug":"不正当的闭包","link":"#不正当的闭包","children":[]},{"level":3,"title":"隐式全局变量","slug":"隐式全局变量","link":"#隐式全局变量","children":[]},{"level":3,"title":"游离dom引用","slug":"游离dom引用","link":"#游离dom引用","children":[]},{"level":3,"title":"定时器","slug":"定时器","link":"#定时器","children":[]},{"level":3,"title":"事件监听器","slug":"事件监听器","link":"#事件监听器","children":[]},{"level":3,"title":"Map、Set对象","slug":"map、set对象","link":"#map、set对象","children":[]},{"level":3,"title":"Console","slug":"console","link":"#console","children":[]}]},{"level":2,"title":"常见的前端内存问题","slug":"常见的前端内存问题","link":"#常见的前端内存问题","children":[]}],"git":{"createdTime":1696846033000,"updatedTime":1696846033000,"contributors":[{"name":"xiaokai-liu","email":"1404197328@qq.com","commits":1}]},"readingTime":{"minutes":24.91,"words":7473},"filePathRelative":"js/高级/6.md","localizedDate":"2022年4月9日","excerpt":"<h1> JavaScript的垃圾回收和内存泄漏</h1>\\n<h2> JavaScript的垃圾回收机制</h2>\\n<h3> 什么是GC</h3>\\n<p>GC 即 <code>Garbage Collection</code> ，程序工作过程中会产生很多垃圾，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 GC 就是负责回收垃圾的，因为他工作在引擎内部，所以对于我们前端来说，GC 过程是相对比较无感的，这一套引擎执行而对我们又相对无感的操作也就是常说的 <code>垃圾回收机制</code> 。<br>\\n当然也不是所有语言都有 GC，一般的高级语言里面会自带 GC，比如 Java、Python、JavaScript 等，也有无 GC 的语言，比如 C、C++ 等，那这种就需要我们程序员手动管理内存了，相对比较麻烦。</p>","autoDesc":true}');export{e as data};
