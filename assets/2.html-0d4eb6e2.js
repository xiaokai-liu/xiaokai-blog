const e=JSON.parse('{"key":"v-32b403b2","path":"/js/%E9%AB%98%E7%BA%A7/2.html","title":"js函数与对象","lang":"zh-CN","frontmatter":{"date":"2022-03-19T00:00:00.000Z","category":["js高级"],"tag":["函数参数","call","apply","bind","new","类数组","arguments","对象创建","继承"],"description":"js函数与对象 函数参数按值传递 在《JavaScript高级程序设计》中提到传递参数 ECMAScript中所有函数的参数都是按值传递的。 按值传递 把函数外部的值复制给函数内部的参数，就和把值从一个变量复制到另一个变量一样。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/js/%E9%AB%98%E7%BA%A7/2.html"}],["meta",{"property":"og:title","content":"js函数与对象"}],["meta",{"property":"og:description","content":"js函数与对象 函数参数按值传递 在《JavaScript高级程序设计》中提到传递参数 ECMAScript中所有函数的参数都是按值传递的。 按值传递 把函数外部的值复制给函数内部的参数，就和把值从一个变量复制到另一个变量一样。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-20T07:31:01.000Z"}],["meta",{"property":"article:author","content":"xiaokai"}],["meta",{"property":"article:tag","content":"函数参数"}],["meta",{"property":"article:tag","content":"call"}],["meta",{"property":"article:tag","content":"apply"}],["meta",{"property":"article:tag","content":"bind"}],["meta",{"property":"article:tag","content":"new"}],["meta",{"property":"article:tag","content":"类数组"}],["meta",{"property":"article:tag","content":"arguments"}],["meta",{"property":"article:tag","content":"对象创建"}],["meta",{"property":"article:tag","content":"继承"}],["meta",{"property":"article:published_time","content":"2022-03-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-20T07:31:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"js函数与对象\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-20T07:31:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaokai\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"函数参数按值传递","slug":"函数参数按值传递","link":"#函数参数按值传递","children":[{"level":3,"title":"按值传递","slug":"按值传递","link":"#按值传递","children":[]},{"level":3,"title":"共享传递","slug":"共享传递","link":"#共享传递","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"手写call和apply","slug":"手写call和apply","link":"#手写call和apply","children":[{"level":3,"title":"手写call","slug":"手写call","link":"#手写call","children":[]},{"level":3,"title":"手写apply","slug":"手写apply","link":"#手写apply","children":[]}]},{"level":2,"title":"手写bind","slug":"手写bind","link":"#手写bind","children":[{"level":3,"title":"返回函数的模拟实现","slug":"返回函数的模拟实现","link":"#返回函数的模拟实现","children":[]},{"level":3,"title":"传参的模拟实现","slug":"传参的模拟实现","link":"#传参的模拟实现","children":[]},{"level":3,"title":"构造函数效果的模拟实现","slug":"构造函数效果的模拟实现","link":"#构造函数效果的模拟实现","children":[]},{"level":3,"title":"构造函数效果的优化实现","slug":"构造函数效果的优化实现","link":"#构造函数效果的优化实现","children":[]}]},{"level":2,"title":"手写模拟new","slug":"手写模拟new","link":"#手写模拟new","children":[{"level":3,"title":"初步实现","slug":"初步实现","link":"#初步实现","children":[]},{"level":3,"title":"最终实现","slug":"最终实现","link":"#最终实现","children":[]}]},{"level":2,"title":"类数组对象与arguments","slug":"类数组对象与arguments","link":"#类数组对象与arguments","children":[{"level":3,"title":"类数组对象","slug":"类数组对象","link":"#类数组对象","children":[]},{"level":3,"title":"Arguments对象","slug":"arguments对象","link":"#arguments对象","children":[]}]},{"level":2,"title":"创建对象的多种方式&优缺点","slug":"创建对象的多种方式-优缺点","link":"#创建对象的多种方式-优缺点","children":[{"level":3,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]},{"level":3,"title":"构造函数模式","slug":"构造函数模式","link":"#构造函数模式","children":[]},{"level":3,"title":"原型模式","slug":"原型模式","link":"#原型模式","children":[]},{"level":3,"title":"组合模式","slug":"组合模式","link":"#组合模式","children":[]}]},{"level":2,"title":"继承的多种方式&优缺点","slug":"继承的多种方式-优缺点","link":"#继承的多种方式-优缺点","children":[{"level":3,"title":"原型链继承","slug":"原型链继承","link":"#原型链继承","children":[]},{"level":3,"title":"构造函数继承","slug":"构造函数继承","link":"#构造函数继承","children":[]},{"level":3,"title":"组合式继承","slug":"组合式继承","link":"#组合式继承","children":[]},{"level":3,"title":"原型继承","slug":"原型继承","link":"#原型继承","children":[]},{"level":3,"title":"寄生式继承","slug":"寄生式继承","link":"#寄生式继承","children":[]}]}],"git":{"createdTime":1695894973000,"updatedTime":1703057461000,"contributors":[{"name":"xiaokai-liu","email":"1404197328@qq.com","commits":3}]},"readingTime":{"minutes":15.92,"words":4777},"filePathRelative":"js/高级/2.md","localizedDate":"2022年3月19日","excerpt":"<h1> js函数与对象</h1>\\n<h2> 函数参数按值传递</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">在《JavaScript高级程序设计》中提到传递参数</p>\\n<p>ECMAScript中所有函数的参数都是按值传递的。</p>\\n</div>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">按值传递</p>\\n<p>把函数外部的值复制给函数内部的参数，就和把值从一个变量复制到另一个变量一样。</p>\\n</div>","autoDesc":true}');export{e as data};
