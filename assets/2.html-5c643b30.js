const e=JSON.parse('{"key":"v-66fddcdc","path":"/vue/%E5%9F%BA%E7%A1%80/2.html","title":"vue进阶用法","lang":"zh-CN","frontmatter":{"date":"2022-04-20T00:00:00.000Z","category":["vue"],"tag":["vue进阶用法"],"description":"vue进阶用法 vue mixin 官方给出了解释 提示 混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。 这段话在理解上很简单，无非就是将每个组件中共同功能抽离出来，而所有共同功能所有组成的一个对象就会被作为一个 Mixin 处理。 通俗点将，就是将组件的公共逻辑或者配置提取出来，哪个组件需要用到时，直接将提取的这部分混入到组件内部即可。这样既可以减少代码冗余度，也可以让后期维护起来更加容易。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/vue/%E5%9F%BA%E7%A1%80/2.html"}],["meta",{"property":"og:title","content":"vue进阶用法"}],["meta",{"property":"og:description","content":"vue进阶用法 vue mixin 官方给出了解释 提示 混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。 这段话在理解上很简单，无非就是将每个组件中共同功能抽离出来，而所有共同功能所有组成的一个对象就会被作为一个 Mixin 处理。 通俗点将，就是将组件的公共逻辑或者配置提取出来，哪个组件需要用到时，直接将提取的这部分混入到组件内部即可。这样既可以减少代码冗余度，也可以让后期维护起来更加容易。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-31T10:00:29.000Z"}],["meta",{"property":"article:author","content":"xiaokai"}],["meta",{"property":"article:tag","content":"vue进阶用法"}],["meta",{"property":"article:published_time","content":"2022-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-31T10:00:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue进阶用法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-31T10:00:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaokai\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"vue mixin","slug":"vue-mixin","link":"#vue-mixin","children":[{"level":3,"title":"Vue mixin 和 Vuex的区别","slug":"vue-mixin-和-vuex的区别","link":"#vue-mixin-和-vuex的区别","children":[]},{"level":3,"title":"mixin的使用","slug":"mixin的使用","link":"#mixin的使用","children":[]},{"level":3,"title":"局部混入","slug":"局部混入","link":"#局部混入","children":[]},{"level":3,"title":"全局混入","slug":"全局混入","link":"#全局混入","children":[]},{"level":3,"title":"选项合并","slug":"选项合并","link":"#选项合并","children":[]}]},{"level":2,"title":"mixin优缺点","slug":"mixin优缺点","link":"#mixin优缺点","children":[]},{"level":2,"title":"vue中的选项式合并策略","slug":"vue中的选项式合并策略","link":"#vue中的选项式合并策略","children":[]},{"level":2,"title":"vue过滤器","slug":"vue过滤器","link":"#vue过滤器","children":[{"level":3,"title":"filter介绍","slug":"filter介绍","link":"#filter介绍","children":[]},{"level":3,"title":"如何使用？","slug":"如何使用","link":"#如何使用","children":[]},{"level":3,"title":"定义filter","slug":"定义filter","link":"#定义filter","children":[]}]}],"git":{"createdTime":1698304820000,"updatedTime":1698746429000,"contributors":[{"name":"xiaokai-liu","email":"1404197328@qq.com","commits":2}]},"readingTime":{"minutes":5.6,"words":1679},"filePathRelative":"vue/基础/2.md","localizedDate":"2022年4月20日","excerpt":"<h1> vue进阶用法</h1>\\n<h2> vue mixin</h2>\\n<p>官方给出了解释</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。</p>\\n</div>\\n<p>这段话在理解上很简单，无非就是将每个组件中共同功能抽离出来，而所有共同功能所有组成的一个对象就会被作为一个 Mixin 处理。</p>\\n<p>通俗点将，就是将组件的公共逻辑或者配置提取出来，哪个组件需要用到时，直接将提取的这部分混入到组件内部即可。这样既可以减少代码冗余度，也可以让后期维护起来更加容易。</p>","autoDesc":true}');export{e as data};
