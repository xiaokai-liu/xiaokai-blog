const e=JSON.parse(`{"key":"v-0b107446","path":"/vue/%E9%AB%98%E7%BA%A7/2.html","title":"vue2源码解析下","lang":"zh-CN","frontmatter":{"date":"2022-04-29T00:00:00.000Z","category":["vue2"],"tag":["vue高级","vue2源码"],"description":"vue2源码解析下 vue组件化 Vue.js的一个核心思想是组件化。所谓组件化，就是把页面拆分成多个组件 (component)，每个组件依赖的 CSS、JavaScript、模板、图片等资源放在一起开发和维护。组件是资源独立的，组件在系统内部可复用，组件和组件之间可以嵌套，接下来我们会从源码的角度来分析 Vue 的组件内部是如何工作的。接下来我们会用 Vue-cli 初始化的代码为例，来分析一下 Vue 组件初始化的一个过程。 import Vue from 'vue' import App from './App.vue' var app = new Vue({ el: '#app', // 这里的 h 是 createElement 方法 render: h =&gt; h(App) })","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/vue/%E9%AB%98%E7%BA%A7/2.html"}],["meta",{"property":"og:title","content":"vue2源码解析下"}],["meta",{"property":"og:description","content":"vue2源码解析下 vue组件化 Vue.js的一个核心思想是组件化。所谓组件化，就是把页面拆分成多个组件 (component)，每个组件依赖的 CSS、JavaScript、模板、图片等资源放在一起开发和维护。组件是资源独立的，组件在系统内部可复用，组件和组件之间可以嵌套，接下来我们会从源码的角度来分析 Vue 的组件内部是如何工作的。接下来我们会用 Vue-cli 初始化的代码为例，来分析一下 Vue 组件初始化的一个过程。 import Vue from 'vue' import App from './App.vue' var app = new Vue({ el: '#app', // 这里的 h 是 createElement 方法 render: h =&gt; h(App) })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-26T07:20:20.000Z"}],["meta",{"property":"article:author","content":"xiaokai"}],["meta",{"property":"article:tag","content":"vue高级"}],["meta",{"property":"article:tag","content":"vue2源码"}],["meta",{"property":"article:published_time","content":"2022-04-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-26T07:20:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue2源码解析下\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-26T07:20:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaokai\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"vue组件化","slug":"vue组件化","link":"#vue组件化","children":[]},{"level":2,"title":"CreateComponent","slug":"createcomponent","link":"#createcomponent","children":[{"level":3,"title":"构造子类构造函数","slug":"构造子类构造函数","link":"#构造子类构造函数","children":[]},{"level":3,"title":"安装钩子函数","slug":"安装钩子函数","link":"#安装钩子函数","children":[]},{"level":3,"title":"实例化VNode","slug":"实例化vnode","link":"#实例化vnode","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"patch","slug":"patch","link":"#patch","children":[{"level":3,"title":"createComponent","slug":"createcomponent-1","link":"#createcomponent-1","children":[]}]},{"level":2,"title":"合并配置","slug":"合并配置","link":"#合并配置","children":[{"level":3,"title":"外部调用场景","slug":"外部调用场景","link":"#外部调用场景","children":[]},{"level":3,"title":"组件场景","slug":"组件场景","link":"#组件场景","children":[]},{"level":3,"title":"总结","slug":"总结-1","link":"#总结-1","children":[]}]},{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[{"level":3,"title":"beforeCreate & created","slug":"beforecreate-created","link":"#beforecreate-created","children":[]},{"level":3,"title":"beforeMount & mounted","slug":"beforemount-mounted","link":"#beforemount-mounted","children":[]},{"level":3,"title":"beforeUpdate & Updated","slug":"beforeupdate-updated","link":"#beforeupdate-updated","children":[]},{"level":3,"title":"beforeDestroy & destroy","slug":"beforedestroy-destroy","link":"#beforedestroy-destroy","children":[]},{"level":3,"title":"activated & deactivated","slug":"activated-deactivated","link":"#activated-deactivated","children":[]}]},{"level":2,"title":"组件注册","slug":"组件注册","link":"#组件注册","children":[{"level":3,"title":"全局注册","slug":"全局注册","link":"#全局注册","children":[]},{"level":3,"title":"局部注册","slug":"局部注册","link":"#局部注册","children":[]}]},{"level":2,"title":"异步组件","slug":"异步组件","link":"#异步组件","children":[{"level":3,"title":"普通的异步组件","slug":"普通的异步组件","link":"#普通的异步组件","children":[]},{"level":3,"title":"Promise异步组件","slug":"promise异步组件","link":"#promise异步组件","children":[]},{"level":3,"title":"高级异步组件","slug":"高级异步组件","link":"#高级异步组件","children":[]},{"level":3,"title":"异步组件 patch","slug":"异步组件-patch","link":"#异步组件-patch","children":[]},{"level":3,"title":"总结","slug":"总结-2","link":"#总结-2","children":[]}]}],"git":{"createdTime":1698304820000,"updatedTime":1698304820000,"contributors":[{"name":"xiaokai-liu","email":"1404197328@qq.com","commits":1}]},"readingTime":{"minutes":39.35,"words":11804},"filePathRelative":"vue/高级/2.md","localizedDate":"2022年4月29日","excerpt":"<h1> vue2源码解析下</h1>\\n<h2> vue组件化</h2>\\n<p>Vue.js的一个核心思想是组件化。所谓组件化，就是把页面拆分成多个组件 (component)，每个组件依赖的 CSS、JavaScript、模板、图片等资源放在一起开发和维护。组件是资源独立的，组件在系统内部可复用，组件和组件之间可以嵌套，接下来我们会从源码的角度来分析 Vue 的组件内部是如何工作的。接下来我们会用 Vue-cli 初始化的代码为例，来分析一下 Vue 组件初始化的一个过程。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> Vue <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span>\\n<span class=\\"token keyword\\">import</span> App <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./App.vue'</span>\\n<span class=\\"token keyword\\">var</span> app <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Vue</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">el</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'#app'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// 这里的 h 是 createElement 方法</span>\\n    <span class=\\"token function-variable function\\">render</span><span class=\\"token operator\\">:</span> <span class=\\"token parameter\\">h</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">h</span><span class=\\"token punctuation\\">(</span>App<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
