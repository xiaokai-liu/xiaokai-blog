const e=JSON.parse(`{"key":"v-3468dc51","path":"/js/%E9%AB%98%E7%BA%A7/3.html","title":"前端异步处理规范及应用","lang":"zh-CN","frontmatter":{"date":"2022-03-24T00:00:00.000Z","category":["js高级"],"tag":["异步处理","Promise","async/await","generator"],"description":"前端异步处理规范及应用 简版Promise Promise/A+规范解读 async/await介绍 generator介绍 简版Promise resolve和reject let p1 = new Promise((resolve, reject) =&gt; { resolve('success') reject('fail') }) console.log('p1', p1) let p2 = new Promise((resolve, reject) =&gt; { reject('success') resolve('fail') }) console.log('p2', p2) let p3 = new Promise((resolve, reject) =&gt; { throw('error') }) console.log('p3', p3)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/js/%E9%AB%98%E7%BA%A7/3.html"}],["meta",{"property":"og:title","content":"前端异步处理规范及应用"}],["meta",{"property":"og:description","content":"前端异步处理规范及应用 简版Promise Promise/A+规范解读 async/await介绍 generator介绍 简版Promise resolve和reject let p1 = new Promise((resolve, reject) =&gt; { resolve('success') reject('fail') }) console.log('p1', p1) let p2 = new Promise((resolve, reject) =&gt; { reject('success') resolve('fail') }) console.log('p2', p2) let p3 = new Promise((resolve, reject) =&gt; { throw('error') }) console.log('p3', p3)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-28T09:56:13.000Z"}],["meta",{"property":"article:author","content":"xiaokai"}],["meta",{"property":"article:tag","content":"异步处理"}],["meta",{"property":"article:tag","content":"Promise"}],["meta",{"property":"article:tag","content":"async/await"}],["meta",{"property":"article:tag","content":"generator"}],["meta",{"property":"article:published_time","content":"2022-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-28T09:56:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端异步处理规范及应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-28T09:56:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaokai\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简版Promise","slug":"简版promise","link":"#简版promise","children":[{"level":3,"title":"resolve和reject","slug":"resolve和reject","link":"#resolve和reject","children":[]},{"level":3,"title":"实现resolve和reject","slug":"实现resolve和reject","link":"#实现resolve和reject","children":[]},{"level":3,"title":"状态不可变","slug":"状态不可变","link":"#状态不可变","children":[]},{"level":3,"title":"throw","slug":"throw","link":"#throw","children":[]},{"level":3,"title":"then","slug":"then","link":"#then","children":[]},{"level":3,"title":"实现then","slug":"实现then","link":"#实现then","children":[]},{"level":3,"title":"定时器","slug":"定时器","link":"#定时器","children":[]},{"level":3,"title":"链式调用","slug":"链式调用","link":"#链式调用","children":[]},{"level":3,"title":"执行顺序","slug":"执行顺序","link":"#执行顺序","children":[]},{"level":3,"title":"all","slug":"all","link":"#all","children":[]},{"level":3,"title":"race","slug":"race","link":"#race","children":[]},{"level":3,"title":"allSettled","slug":"allsettled","link":"#allsettled","children":[]},{"level":3,"title":"any","slug":"any","link":"#any","children":[]},{"level":3,"title":"异步调度器","slug":"异步调度器","link":"#异步调度器","children":[]},{"level":3,"title":"Promise A+规范","slug":"promise-a-规范","link":"#promise-a-规范","children":[]}]},{"level":2,"title":"async/await","slug":"async-await","link":"#async-await","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"generator","slug":"generator","link":"#generator","children":[{"level":3,"title":"介绍","slug":"介绍-1","link":"#介绍-1","children":[]},{"level":3,"title":"yield后接函数","slug":"yield后接函数","link":"#yield后接函数","children":[]},{"level":3,"title":"yield后面接promise","slug":"yield后面接promise","link":"#yield后面接promise","children":[]},{"level":3,"title":"next函数传参","slug":"next函数传参","link":"#next函数传参","children":[]},{"level":3,"title":"Promise&next传参","slug":"promise-next传参","link":"#promise-next传参","children":[]},{"level":3,"title":"实现async/await","slug":"实现async-await","link":"#实现async-await","children":[]},{"level":3,"title":"结合多个await方法","slug":"结合多个await方法","link":"#结合多个await方法","children":[]},{"level":3,"title":"测试结果","slug":"测试结果","link":"#测试结果","children":[]}]}],"git":{"createdTime":1695894973000,"updatedTime":1695894973000,"contributors":[{"name":"xiaokai-liu","email":"1404197328@qq.com","commits":1}]},"readingTime":{"minutes":19.7,"words":5910},"filePathRelative":"js/高级/3.md","localizedDate":"2022年3月24日","excerpt":"<h1> 前端异步处理规范及应用</h1>\\n<ul>\\n<li>简版Promise</li>\\n<li>Promise/A+规范解读</li>\\n<li>async/await介绍</li>\\n<li>generator介绍</li>\\n</ul>\\n<h2> 简版Promise</h2>\\n<h3> resolve和reject</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">let</span> p1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve<span class=\\"token punctuation\\">,</span> reject</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'success'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fail'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'p1'</span><span class=\\"token punctuation\\">,</span> p1<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">let</span> p2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve<span class=\\"token punctuation\\">,</span> reject</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'success'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fail'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'p2'</span><span class=\\"token punctuation\\">,</span> p2<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">let</span> p3 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve<span class=\\"token punctuation\\">,</span> reject</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">throw</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'error'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'p3'</span><span class=\\"token punctuation\\">,</span> p3<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
